package com.indoorlocalization.sensordisplay;


import android.app.Activity;
import android.graphics.Color;
import android.hardware.SensorListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
 
 
public class MainActivity extends Activity implements SensorEListener {
 
	SensorManager sm = null;
 
	TextView xacc= null;
	TextView yacc = null;
	TextView zacc = null;
	TextView xorient = null;
	TextView yorient = null;
	TextView zorient = null;
	TextView text = null;
 
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        sm = (SensorManager) getSystemService(SENSOR_SERVICE);
        setContentView(R.layout.activity_main);
 
 
        xacc = (TextView) findViewById(R.id.xvalue);
        yacc = (TextView) findViewById(R.id.yvalue);
        zacc = (TextView) findViewById(R.id.zvalue);
        xorient = (TextView) findViewById(R.id.xvalues);
        yorient = (TextView) findViewById(R.id.yvalues);
        zorient = (TextView) findViewById(R.id.zvalues);
 
 
    }
 
 
 
    public void onSensorChanged(int sensor, float[] values) {
        synchronized (this) {

            if (sensor == SensorManager.SENSOR_ORIENTATION) {
	            xorient.setText("Orientation X: " + values[0]);
	            yorient.setText("Orientation Y: " + values[1]);
	            zorient.setText("Orientation Z: " + values[2]);
            }
            if (sensor == SensorManager.SENSOR_ACCELEROMETER) {
	            xacc.setText("Accel X: " + values[0]);
	            yacc.setText("Accel Y: " + values[1]);
	            zacc.setText("Accel Z: " + values[2]);
            }            
        }
    }
 
    public void onAccuracyChanged(int sensor, int accuracy) {
    	//Log.d(tag,"onAccuracyChanged: " + sensor + ", accuracy: " + accuracy);
 
    }
 
 
    @Override
    protected void onResume() {
        super.onResume();
        sm.registerListener(this, 
                SensorManager.SENSOR_ORIENTATION |
        		SensorManager.SENSOR_ACCELEROMETER,
                SensorManager.SENSOR_DELAY_NORMAL);
    }
 
    @Override
    protected void onStop() {
        sm.unregisterListener(this);
        super.onStop();
    }    
 
 
}
